// Mocks generated by Mockito 5.4.5 from annotations
// in absmartly_sdk/test/default_context_data_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:absmartly_sdk/client.dart' as _i4;
import 'package:absmartly_sdk/context_data_deserializer.dart' as _i6;
import 'package:absmartly_sdk/context_event_serializer.dart' as _i7;
import 'package:absmartly_sdk/http_client.dart' as _i2;
import 'package:absmartly_sdk/json/context_data.dart' as _i8;
import 'package:absmartly_sdk/json/publish_event.dart' as _i9;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeHTTPClient_0 extends _i1.SmartFake implements _i2.HTTPClient {
  _FakeHTTPClient_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeCompleter_1<T> extends _i1.SmartFake implements _i3.Completer<T> {
  _FakeCompleter_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i4.Client {
  @override
  String get url_ => (super.noSuchMethod(
        Invocation.getter(#url_),
        returnValue: _i5.dummyValue<String>(this, Invocation.getter(#url_)),
        returnValueForMissingStub: _i5.dummyValue<String>(
          this,
          Invocation.getter(#url_),
        ),
      ) as String);

  @override
  set url_(String? _url_) => super.noSuchMethod(
        Invocation.setter(#url_, _url_),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get query_ => (super.noSuchMethod(
        Invocation.getter(#query_),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  set query_(Map<String, String>? _query_) => super.noSuchMethod(
        Invocation.setter(#query_, _query_),
        returnValueForMissingStub: null,
      );

  @override
  Map<String, String> get headers_ => (super.noSuchMethod(
        Invocation.getter(#headers_),
        returnValue: <String, String>{},
        returnValueForMissingStub: <String, String>{},
      ) as Map<String, String>);

  @override
  set headers_(Map<String, String>? _headers_) => super.noSuchMethod(
        Invocation.setter(#headers_, _headers_),
        returnValueForMissingStub: null,
      );

  @override
  _i2.HTTPClient get httpClient_ => (super.noSuchMethod(
        Invocation.getter(#httpClient_),
        returnValue: _FakeHTTPClient_0(
          this,
          Invocation.getter(#httpClient_),
        ),
        returnValueForMissingStub: _FakeHTTPClient_0(
          this,
          Invocation.getter(#httpClient_),
        ),
      ) as _i2.HTTPClient);

  @override
  set httpClient_(_i2.HTTPClient? _httpClient_) => super.noSuchMethod(
        Invocation.setter(#httpClient_, _httpClient_),
        returnValueForMissingStub: null,
      );

  @override
  set deserializer_(_i6.ContextDataDeserializer? _deserializer_) =>
      super.noSuchMethod(
        Invocation.setter(#deserializer_, _deserializer_),
        returnValueForMissingStub: null,
      );

  @override
  set serializer_(_i7.ContextEventSerializer? _serializer_) =>
      super.noSuchMethod(
        Invocation.setter(#serializer_, _serializer_),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Completer<_i8.ContextData> getContextData() => (super.noSuchMethod(
        Invocation.method(#getContextData, []),
        returnValue: _FakeCompleter_1<_i8.ContextData>(
          this,
          Invocation.method(#getContextData, []),
        ),
        returnValueForMissingStub: _FakeCompleter_1<_i8.ContextData>(
          this,
          Invocation.method(#getContextData, []),
        ),
      ) as _i3.Completer<_i8.ContextData>);

  @override
  _i3.Completer<void> publish(_i9.PublishEvent? event) => (super.noSuchMethod(
        Invocation.method(#publish, [event]),
        returnValue: _FakeCompleter_1<void>(
          this,
          Invocation.method(#publish, [event]),
        ),
        returnValueForMissingStub: _FakeCompleter_1<void>(
          this,
          Invocation.method(#publish, [event]),
        ),
      ) as _i3.Completer<void>);
}
