// Mocks generated by Mockito 5.4.5 from annotations
// in absmartly_sdk/test/context_2_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:absmartly_sdk/audience_deserializer.dart' as _i3;
import 'package:absmartly_sdk/audience_matcher.dart' as _i12;
import 'package:absmartly_sdk/context.dart' as _i8;
import 'package:absmartly_sdk/context_data_provider.dart' as _i5;
import 'package:absmartly_sdk/context_event_handler.dart' as _i7;
import 'package:absmartly_sdk/context_event_logger.dart' as _i10;
import 'package:absmartly_sdk/json/context_data.dart' as _i6;
import 'package:absmartly_sdk/json/publish_event.dart' as _i9;
import 'package:absmartly_sdk/jsonexpr/json_expr.dart' as _i4;
import 'package:absmartly_sdk/variable_parser.dart' as _i11;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCompleter_0<T> extends _i1.SmartFake implements _i2.Completer<T> {
  _FakeCompleter_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAudienceDeserializer_1 extends _i1.SmartFake
    implements _i3.AudienceDeserializer {
  _FakeAudienceDeserializer_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeJsonExpr_2 extends _i1.SmartFake implements _i4.JsonExpr {
  _FakeJsonExpr_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ContextDataProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockContextDataProvider extends _i1.Mock
    implements _i5.ContextDataProvider {
  @override
  _i2.Completer<_i6.ContextData> getContextData() =>
      (super.noSuchMethod(
            Invocation.method(#getContextData, []),
            returnValue: _FakeCompleter_0<_i6.ContextData>(
              this,
              Invocation.method(#getContextData, []),
            ),
            returnValueForMissingStub: _FakeCompleter_0<_i6.ContextData>(
              this,
              Invocation.method(#getContextData, []),
            ),
          )
          as _i2.Completer<_i6.ContextData>);
}

/// A class which mocks [ContextEventHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockContextEventHandler extends _i1.Mock
    implements _i7.ContextEventHandler {
  @override
  _i2.Completer<void> publish(_i8.Context? context, _i9.PublishEvent? event) =>
      (super.noSuchMethod(
            Invocation.method(#publish, [context, event]),
            returnValue: _FakeCompleter_0<void>(
              this,
              Invocation.method(#publish, [context, event]),
            ),
            returnValueForMissingStub: _FakeCompleter_0<void>(
              this,
              Invocation.method(#publish, [context, event]),
            ),
          )
          as _i2.Completer<void>);
}

/// A class which mocks [ContextEventLogger].
///
/// See the documentation for Mockito's code generation for more information.
class MockContextEventLogger extends _i1.Mock
    implements _i10.ContextEventLogger {
  @override
  void handleEvent(_i8.Context? context, _i10.EventType? type, dynamic data) =>
      super.noSuchMethod(
        Invocation.method(#handleEvent, [context, type, data]),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [VariableParser].
///
/// See the documentation for Mockito's code generation for more information.
class MockVariableParser extends _i1.Mock implements _i11.VariableParser {
  @override
  Map<String, dynamic>? parse(
    _i8.Context? context,
    String? experimentName,
    String? variantName,
    String? variableValue,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#parse, [
              context,
              experimentName,
              variantName,
              variableValue,
            ]),
            returnValueForMissingStub: null,
          )
          as Map<String, dynamic>?);
}

/// A class which mocks [AudienceMatcher].
///
/// See the documentation for Mockito's code generation for more information.
class MockAudienceMatcher extends _i1.Mock implements _i12.AudienceMatcher {
  @override
  _i3.AudienceDeserializer get deserializer_ =>
      (super.noSuchMethod(
            Invocation.getter(#deserializer_),
            returnValue: _FakeAudienceDeserializer_1(
              this,
              Invocation.getter(#deserializer_),
            ),
            returnValueForMissingStub: _FakeAudienceDeserializer_1(
              this,
              Invocation.getter(#deserializer_),
            ),
          )
          as _i3.AudienceDeserializer);

  @override
  _i4.JsonExpr get jsonExpr_ =>
      (super.noSuchMethod(
            Invocation.getter(#jsonExpr_),
            returnValue: _FakeJsonExpr_2(this, Invocation.getter(#jsonExpr_)),
            returnValueForMissingStub: _FakeJsonExpr_2(
              this,
              Invocation.getter(#jsonExpr_),
            ),
          )
          as _i4.JsonExpr);

  @override
  set jsonExpr_(_i4.JsonExpr? _jsonExpr_) => super.noSuchMethod(
    Invocation.setter(#jsonExpr_, _jsonExpr_),
    returnValueForMissingStub: null,
  );

  @override
  _i12.Result? evaluate(String? audience, Map<String, dynamic>? attributes) =>
      (super.noSuchMethod(
            Invocation.method(#evaluate, [audience, attributes]),
            returnValueForMissingStub: null,
          )
          as _i12.Result?);
}

/// A class which mocks [Timer].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimer extends _i1.Mock implements _i2.Timer {
  @override
  int get tick =>
      (super.noSuchMethod(
            Invocation.getter(#tick),
            returnValue: 0,
            returnValueForMissingStub: 0,
          )
          as int);

  @override
  bool get isActive =>
      (super.noSuchMethod(
            Invocation.getter(#isActive),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);

  @override
  void cancel() => super.noSuchMethod(
    Invocation.method(#cancel, []),
    returnValueForMissingStub: null,
  );
}
